version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: user_tasks_api
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${DB_USER:-dbuser}
      - DB_PASSWORD=${DB_PASSWORD:-your_password_here}
      - DB_NAME=${DB_NAME:-user_tasks_db}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_here}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1d}
    ports:
      - "${APP_PORT:-3000}:3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: user_tasks_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-your_root_password_here}
      MYSQL_DATABASE: ${DB_NAME:-user_tasks_db}
      MYSQL_USER: ${DB_USER:-dbuser}
      MYSQL_PASSWORD: ${DB_PASSWORD:-your_password_here}
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./src/config/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-your_root_password_here}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data_prod:
    driver: local