
> workshop@1.0.0 swagger:json
> ts-node -e "import swaggerSpec from './src/config/swagger'; console.log(JSON.stringify(swaggerSpec, null, 2));"

[dotenv@17.1.0] injecting env (9) from .env (tip: ⚙️  suppress all logs with { quiet: true })
{
  "openapi": "3.0.0",
  "info": {
    "title": "User Tasks API",
    "version": "1.0.0",
    "description": "REST API for user authentication and task management",
    "license": {
      "name": "ISC",
      "url": "https://opensource.org/licenses/ISC"
    },
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The auto-generated UUID of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The user's email address"
          },
          "password_hash": {
            "type": "string",
            "description": "The hashed password"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the user was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the user was last updated"
          }
        },
        "example": {
          "id": "123e4567-e89b-12d3-a456-426614174000",
          "email": "user@example.com",
          "created_at": "2023-01-01T00:00:00.000Z",
          "updated_at": "2023-01-01T00:00:00.000Z"
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data"
          },
          "409": {
            "description": "Conflict - Email already in use"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Authenticate user and get token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Get current authenticated user",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Not found - User not found"
          }
        }
      }
    }
  },
  "tags": []
}
